name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: darwin
            goarch: amd64
            name: smartroute-darwin-amd64
          - goos: darwin
            goarch: arm64
            name: smartroute-darwin-arm64
          - goos: linux
            goarch: amd64
            name: smartroute-linux-amd64
          - goos: linux
            goarch: arm64
            name: smartroute-linux-arm64
          - goos: windows
            goarch: amd64
            name: smartroute-windows-amd64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Get dependencies
        run: go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          go build -ldflags="-s -w -X main.version=${{ github.ref_name }}" -o ${{ matrix.name }} ./cmd

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Generate release notes with AI
        id: release_notes
        run: |
          # Extract version from tag
          VERSION="${{ github.ref_name }}"
          
          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$LAST_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s" $LAST_TAG..HEAD)
          else
            COMMITS=$(git log --pretty=format:"- %s" --max-count=10)
          fi
          
          # Generate release notes
          cat > release_notes.md << EOF
          # Smart Route Manager $VERSION
          
          🚀 **新版本发布！**
          
          ## 📋 更新内容
          
          $COMMITS
          
          ## 📦 下载说明
          
          请根据你的系统架构下载对应的二进制文件：
          
          ### macOS
          - **Apple Silicon (M1/M2/M3)**: \`smartroute-darwin-arm64\`
          - **Intel**: \`smartroute-darwin-amd64\`
          
          ### Linux  
          - **x64**: \`smartroute-linux-amd64\`
          - **ARM64**: \`smartroute-linux-arm64\`
          
          ### Windows
          - **x64**: \`smartroute-windows-amd64.exe\`
          
          ## 🚀 快速安装 (macOS)
          
          \`\`\`bash
          curl -sSL https://raw.githubusercontent.com/wesleywu/smart-route/main/scripts/install.sh | bash
          \`\`\`
          
          ## ✨ 主要功能
          
          - 🚀 **智能分流**: 中国IP地址和DNS服务器直连，其他流量走VPN
          - 🔄 **自动适配**: WiFi切换时自动调整路由，无需手动操作  
          - 🛡️ **稳定可靠**: 系统服务模式，开机自启，异常自恢复
          - ⚡ **高性能**: 8000+条路由规则，2秒内完成配置
          
          ## 📊 技术规格
          
          - **路由规则**: 8690个中国IP网段 + 4个DNS服务器
          - **性能**: 2秒内完成路由配置
          - **兼容VPN**: WireGuard、OpenVPN等三层VPN
          
          ---
          
          🌟 如果这个工具对你有帮助，请给个 Star 支持一下！
          EOF
          
          # Set output for later use
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          cat release_notes.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Smart Route Manager ${{ github.ref_name }}
          body: ${{ steps.release_notes.outputs.release_notes }}
          files: |
            artifacts/smartroute-darwin-amd64/smartroute-darwin-amd64
            artifacts/smartroute-darwin-arm64/smartroute-darwin-arm64
            artifacts/smartroute-linux-amd64/smartroute-linux-amd64
            artifacts/smartroute-linux-arm64/smartroute-linux-arm64
            artifacts/smartroute-windows-amd64.exe/smartroute-windows-amd64.exe
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}